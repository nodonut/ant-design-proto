{"version":3,"sources":["comps/TableComp.js","comps/HeaderComp.js","comps/SiderComp.js","App.js","reportWebVitals.js","index.js"],"names":["columns","Input","Search","AudioOutlined","title","dataIndex","defaultSortOrder","sorter","a","b","score","filters","text","value","onFilter","record","name","indexOf","length","sortDirections","age","data","key","airline","therm_screen","CheckCircleTwoTone","twoToneColor","face_masks","hand_san","ExclamationCircleTwoTone","health_dec_form","onChange","pagination","extra","console","log","TableComp","props","state","showHeader","dataSource","React","Component","Header","Layout","Title","Typography","headerStyle","display","justifyContent","alignItems","paddingTop","HeaderComp","style","color","Sider","SiderComp","defaultSelectedKeys","mode","Item","FilterOutlined","ItemGroup","Footer","Content","App","className","padding","margin","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81766d1b.chunk.js","sourcesContent":["import React from 'react';\nimport { Table } from 'antd';\nimport { Input } from 'antd';\nimport { AudioOutlined } from '@ant-design/icons';\nimport {\n  SmileTwoTone,\n  HeartTwoTone,\n  CheckCircleTwoTone,\n  ExclamationCircleTwoTone,\n} from '@ant-design/icons';\n\nconst { Search } = Input;\n\nconst suffix = (\n  <AudioOutlined\n    style={{\n      fontSize: 16,\n      color: '#1890ff',\n    }}\n  />\n);\n\nconst onSearch = (value) => console.log(value);\n\nconst columns = [\n  {\n    title: 'Score',\n    dataIndex: 'score',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => a.score - b.score,\n  },\n  {\n    title: 'Airline',\n    dataIndex: 'airline',\n    filters: [\n      {\n        text: 'Airline 1',\n        value: 'Airline 1',\n      },\n    ],\n    // specify the condition of filtering result\n    // here is that finding the name started with `value`\n    onFilter: (value, record) => record.name.indexOf(value) === 0,\n    sorter: (a, b) => a.name.length - b.name.length,\n    sortDirections: ['descend'],\n  },\n  {\n    title: 'Thermal Screening',\n    dataIndex: 'therm_screen',\n    defaultSortOrder: 'descend',\n    sorter: (a, b) => a.age - b.age,\n  },\n  {\n    title: 'Face Masks',\n    dataIndex: 'face_masks',\n  },\n  {\n    title: 'Hand Sanitizer',\n    dataIndex: 'hand_san',\n  },\n  {\n    title: 'Health Declaration Form',\n    dataIndex: 'health_dec_form',\n  },\n];\n\nconst data = [\n  {\n    key: '1',\n    score: 3.8,\n    airline: 'AEGEAN AIRLINES',\n    therm_screen: <CheckCircleTwoTone twoToneColor='#52c41a' />,\n    face_masks: <CheckCircleTwoTone twoToneColor='#52c41a' />,\n    hand_san: <ExclamationCircleTwoTone twoToneColor='orange' />,\n    health_dec_form: <ExclamationCircleTwoTone twoToneColor='orange' />,\n  },\n  {\n    key: '2',\n    score: 4.8,\n    airline: 'AER LINGUS',\n    therm_screen: <CheckCircleTwoTone twoToneColor='#52c41a' />,\n    face_masks: <CheckCircleTwoTone twoToneColor='#52c41a' />,\n    hand_san: <CheckCircleTwoTone twoToneColor='#52c41a' />,\n    health_dec_form: <ExclamationCircleTwoTone twoToneColor='orange' />,\n  },\n  {\n    key: '3',\n    score: 3.8,\n    airline: 'AEGEAN AIRLINES',\n    therm_screen: <CheckCircleTwoTone twoToneColor='#52c41a' />,\n    face_masks: <CheckCircleTwoTone twoToneColor='#52c41a' />,\n    hand_san: <ExclamationCircleTwoTone twoToneColor='orange' />,\n    health_dec_form: <ExclamationCircleTwoTone twoToneColor='orange' />,\n  },\n  {\n    key: '4',\n    score: 3.8,\n    airline: 'AEGEAN AIRLINES',\n    therm_screen: <CheckCircleTwoTone twoToneColor='#52c41a' />,\n    face_masks: <CheckCircleTwoTone twoToneColor='#52c41a' />,\n    hand_san: <ExclamationCircleTwoTone twoToneColor='orange' />,\n    health_dec_form: <ExclamationCircleTwoTone twoToneColor='orange' />,\n  },\n  {\n    key: '5',\n    score: 3.8,\n    airline: 'AEGEAN AIRLINES',\n    therm_screen: <CheckCircleTwoTone twoToneColor='#52c41a' />,\n    face_masks: <CheckCircleTwoTone twoToneColor='#52c41a' />,\n    hand_san: <ExclamationCircleTwoTone twoToneColor='orange' />,\n    health_dec_form: <ExclamationCircleTwoTone twoToneColor='orange' />,\n  },\n];\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\nconst showHeader = true;\n\nclass TableComp extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    showHeader,\n  };\n  render() {\n    return <Table columns={columns} dataSource={data} onChange={onChange} />;\n  }\n}\n\nexport default TableComp;\n","import React from 'react';\nimport { Layout, Typography } from 'antd';\n\nconst { Header } = Layout;\nconst { Title } = Typography;\n\nconst headerStyle = {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  paddingTop: '1em',\n};\n\nfunction HeaderComp() {\n  return (\n    <Header style={headerStyle}>\n      <Title style={{ color: 'whitesmoke' }}>Safe Travel Barrowmeter</Title>\n    </Header>\n  );\n}\n\nexport default HeaderComp;\n","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport {\n  AppstoreOutlined,\n  MailOutlined,\n  SettingOutlined,\n  FilterOutlined,\n} from '@ant-design/icons';\n\nconst { Sider } = Layout;\n\nfunction SiderComp() {\n  return (\n    <Sider>\n      <Menu defaultSelectedKeys={['categories']} mode='inline'>\n        <Menu.Item key='dashboard'>Dashboard</Menu.Item>\n        <SubMenu\n          title={\n            <span>\n              <FilterOutlined />\n              <span>Categories</span>\n            </span>\n          }\n        >\n          <Menu.ItemGroup key='categories' title='Categories'>\n            <Menu.Item key='airlines'>Airlines</Menu.Item>\n            <Menu.Item key='precautions'>Precautions</Menu.Item>\n          </Menu.ItemGroup>\n        </SubMenu>\n      </Menu>\n    </Sider>\n  );\n}\n\nexport default SiderComp;\n","import './App.css';\nimport { Breadcrumb, Button, Layout, Menu, Typography, Table } from 'antd';\n\nimport TableComp from './comps/TableComp';\nimport HeaderComp from './comps/HeaderComp';\nimport SiderComp from './comps/SiderComp';\nimport ColSwitch from './comps/ColSwitch';\n\nconst { Footer, Sider, Content } = Layout;\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Layout>\n        <HeaderComp />\n        <Layout>\n          <SiderComp />\n          <Layout>\n            <Content style={{ padding: '0 50px' }}>\n              <Breadcrumb style={{ margin: '16px 0' }}>\n                <Breadcrumb.Item>Categories</Breadcrumb.Item>\n              </Breadcrumb>\n              <div className='site-layout-content'>\n                <TableComp />\n              </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Example Footer</Footer>\n          </Layout>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}